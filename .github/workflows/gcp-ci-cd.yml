name: Continuous Deployment

on:
  release:
    types: [ published ]

permissions:
  contents: read
  actions: read

jobs:
  docker-image-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set secret.yml file
        run: |
          touch ./src/main/resources/secret.yml
          echo "${{ secrets.SECRETYML }}" > ./src/main/resources/secret.yml
          cat ./src/main/resources/secret.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew bootJar
        shell: bash

      - name: Login to Google Artifact Registry
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GAR_JSON_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.event.release.tag_name }}" \
                       -t "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest" ./

      - name: Push Docker Image with Release Tag
        run: docker push "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.event.release.tag_name }}"

      - name: Push Docker Image with Latest Tag
        run: docker push "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest"

      - name: slack-notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

#      Todo: 인프라 설계 이후 추가